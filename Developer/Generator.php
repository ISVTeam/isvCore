<?php
/**
 * Created by PhpStorm.
 * User: vladimir
 * Date: 17.07.16
 * Time: 04:30
 */

namespace isv\Developer;
use isv\DB\DbAdapter;
use isv\Exception\CoreException;

/**
 * class Generator
 * @package isv\Developer
 */
class Generator
{

    /**
     * Generator constructor.
     */
    public function __construct()
    {
        if($_SERVER['REMOTE_ADDR'] !== '127.0.0.1')
        {
            exit('Access denied!');
        }
    }


    /**
     * Generate php model class form database table
     * @param $table
     * @return bool
     * @throws CoreException
     */
    public function modelGenerator($table, $generateModel)
    {
        $connection = new DbAdapter();
        $pdo = $connection->Adapter();

        $stmt = $pdo->prepare("SHOW COLUMNS FROM $table");
        $stmt->execute();
        $structure = $stmt->fetchAll(\PDO::FETCH_ASSOC);
        $this->generateRepository($table, $structure);
        if($generateModel)
            $this->generateModel($table, $structure);
        return 1;
    }

    private function generateRepository($table, $structure)
    {
        $file = ROOTDIR.'/Models/Repositories/'.  ucfirst($table).'Repository.php';
        if(!is_file($file))
        {
            touch($file);
            chmod($file, 0666);
        }
        $fileContent = '<?php'.PHP_EOL;
        $fileContent .= 'namespace Models\Repositories;'.PHP_EOL;
        $fileContent .= 'use isv\DB\ModelBase;'.PHP_EOL;
        $fileContent .= ''.PHP_EOL;

        $fileContent .='/**'.PHP_EOL;
        $fileContent .='* class '.  ucfirst($table).'Repository Generated by ISV framework generator'.PHP_EOL;
        $fileContent .='* @version 1.1'.PHP_EOL;
        $fileContent .='* @package Models'.PHP_EOL;
        $fileContent .='*'.PHP_EOL;
        $fileContent .='*/'.PHP_EOL;

        $fileContent .='class '.  ucfirst($table).'Repository extends ModelBase'.PHP_EOL;

        $fileContent .='{'.PHP_EOL;

        $fileContent .='    /**'.PHP_EOL;
        $fileContent .='    *@param string $table'.PHP_EOL;
        $fileContent .='    */'.PHP_EOL;
        $fileContent .='    protected $table = \''.$table.'\';'.PHP_EOL;
        $fileContent .='    '.PHP_EOL;
        // Properties
        foreach($structure as $field)
        {
            $fileContent .='    /**'.PHP_EOL;
            $fileContent .='    *@param mixed $'.$field['Field'].PHP_EOL;
            $fileContent .='    *type '.$field['Type'].PHP_EOL;
            $fileContent .='    *@default '.$field['Default'].PHP_EOL;
            $fileContent .='    */'.PHP_EOL;
            $fileContent .='    protected '.'$'.$field['Field'].';'.PHP_EOL;
            $fileContent .='    '.PHP_EOL;
        }
        // Methods
        foreach($structure as $field)
        {
            if($field['Key'] === 'PRI')
            {
                $fileContent .='    /**'.PHP_EOL;
                $fileContent .='     *'.PHP_EOL;
                $fileContent .='     * Get primary key '.PHP_EOL;
                $fileContent .='     * @return  int'.PHP_EOL;
                $fileContent .='     */'.PHP_EOL;
                $fileContent .='    public function getPrimary()'.PHP_EOL;
                $fileContent .='    {'.PHP_EOL;
                $fileContent .='        return \''.$field['Field'].'\';'.PHP_EOL;
                $fileContent .='    }'.PHP_EOL;
                $fileContent .='    '.PHP_EOL;
            }
            else
            {
                $fileContent .='    /**'.PHP_EOL;
                $fileContent .='     *'.PHP_EOL;
                $fileContent .='     * Setter Function for '.$field['Field'].PHP_EOL;
                $fileContent .='     * @param $'.strtolower($field['Field']).PHP_EOL;
                $fileContent .='     * @return  $this'.PHP_EOL;
                $fileContent .='     */'.PHP_EOL;
                $fileContent .='    public function set'.ucfirst($field['Field']).'($'.strtolower($field['Field']).')'.PHP_EOL;
                $fileContent .='    {'.PHP_EOL;
                $fileContent .='        $this->'.$field['Field'].' = $'.strtolower($field['Field']).';'.PHP_EOL;
                $fileContent .='        return $this;'.PHP_EOL;
                $fileContent .='    }'.PHP_EOL;
                $fileContent .='    '.PHP_EOL;
            }
        }

        foreach($structure as $field)
        {
            $fileContent .='    /**'.PHP_EOL;
            $fileContent .='     *'.PHP_EOL;
            $fileContent .='     * getter Function for $'.$field['Field'].PHP_EOL;
            $fileContent .='     * @return  $'.$field['Field'].PHP_EOL;
            $fileContent .='     */'.PHP_EOL;
            $fileContent .='    public function get'.ucfirst($field['Field']).'()'.PHP_EOL;
            $fileContent .='    {'.PHP_EOL;
            $fileContent .='        return $this->'.$field['Field'].';'.PHP_EOL;
            $fileContent .='    }'.PHP_EOL;
            $fileContent .='    '.PHP_EOL;
        }

        $fileContent.='    /**';
        $fileContent.='    *@return bool';
        $fileContent.='    */';
        $fileContent.= PHP_EOL.'    public function validateData(){ return true; }'.PHP_EOL;
        $fileContent.=PHP_EOL;
        $fileContent.='    /**';
        $fileContent.='    *@return array';
        $fileContent.='    */';
        $fileContent.= PHP_EOL.'    public function forms(){ return parent::forms(); }'.PHP_EOL;
        $fileContent .='}'.PHP_EOL;
        return file_put_contents($file, $fileContent);
    }

    private function generateModel($table, $structure)
    {
        $typesArray = [
            'int' => 'number',
            'varchar' => 'text',
            'text' => 'textarea',
            'float' => 'text',
            'tinyint' => 'checkbox',
        ];
        $file = ROOTDIR.'/Models/'.  ucfirst($table).'Model.php';
        if(!is_file($file))
        {
            touch($file);
            chmod($file, 0666);
        }
        $fileContent = '<?php'.PHP_EOL;
        $fileContent .= 'namespace Models;'.PHP_EOL;
        $fileContent .= 'use Models\Repositories\\'.ucfirst($table).'Repository;'.PHP_EOL;
        $fileContent .= ''.PHP_EOL;

        $fileContent .='/**'.PHP_EOL;
        $fileContent .='* class '.  ucfirst($table).'Model Generated by ISV framework generator'.PHP_EOL;
        $fileContent .='* @version 1.1'.PHP_EOL;
        $fileContent .='* @package Models'.PHP_EOL;
        $fileContent .='*'.PHP_EOL;
        $fileContent .='*/'.PHP_EOL;

        $fileContent .='class '.  ucfirst($table).'Model extends '.ucfirst($table).'Repository'.PHP_EOL;

        $fileContent .='{'.PHP_EOL;


        $formsArray = '/**'.PHP_EOL;
        $formsArray .= '    *Method forms define rules for generate forms from this model'.PHP_EOL;
        $formsArray .= '    */'.PHP_EOL;
        $formsArray .= '    public function forms()'.PHP_EOL;
        $formsArray.= '    {'.PHP_EOL;
        $formsArray.= '        return ['.PHP_EOL;
        foreach($structure as $field)
        {
            // Array generate for forms builder
            $parts = explode('(', $field['Type']);
            $params[$field['Field']] = ['type' => $typesArray[$parts[0]]];
            $formsArray .= "            '".$field['Field']."' => ['type' => '".$typesArray[$parts[0]]."',],".PHP_EOL;
        }
        $formsArray .='        ];'.PHP_EOL;
        $formsArray.='    }';
        $fileContent.='    '.$formsArray.PHP_EOL;
        $fileContent .='}'.PHP_EOL;
        return file_put_contents($file, $fileContent);
    }
}